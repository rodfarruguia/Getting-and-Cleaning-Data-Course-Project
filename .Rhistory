X <- rbind(testData, trainData)
## Garbage collection
rm(testData)
rm(trainData)
## Read subjects and combine
testSub <- read.table("test/subject_test.txt")
trainSub <- read.table("train/subject_train.txt")
S <- rbind(testSub, trainSub)
## Garbage collection
rm(testSub)
rm(trainSub)
## Read in data labels and combine
testLabel <- read.table("test/y_test.txt")
trainLabel <- read.table("train/y_train.txt")
Y <- rbind(testLabel, trainLabel)
## Garbage collection
rm(testLabel)
rm(trainLabel)
## Read Features List (to be used as column names for data)
featuresList <- read.table("features.txt", stringsAsFactors=FALSE)
## Use only names from features list
features <- featuresList$V2
## Logical Vector to keep only std and mean columns
keepColumns <- grepl("(std|mean[^F])", features, perl=TRUE)
## Keep only data we want, and name it human readable
X <- X[, keepColumns]
names(X) <- features[keepColumns]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Read ActivityList (to add descriptive names to data set)
activities <- read.table("activity_labels.txt")
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity" ## Add activity label
## Add human readable labels to activity names
names(S) <- "subject"
tidyData <- cbind(S, Y, X)
write.table(tidyData, "tidyData.txt")
## Create second tiny data set with avg of each var for each act and each sub
uS = unique(S)[,1]
nS = length(uS)
nA = length(activities[,1])
nC = length(names(tidyData))
td = tidyData[ 1:(nS*nA), ]
row = 1
for (s in 1:nS) {
for (a in 1:nA) {
td[row,1] = uS[s]
td[row,2] = activities[a, 2]
tmp <- tidyData[tidyData$subject==s & tidyData$activity==activities[a,2],]
td[row, 3:nC] <- colMeans(tmp[, 3:nC])
row = row + 1
}
}
write.table(td, "tidyData2.txt")
library(reshape2)
## Read data sets and combine
testData <- read.table("test/X_test.txt")
trainData <- read.table("train/X_train.txt")
X <- rbind(testData, trainData)
## Garbage collection
rm(testData)
rm(trainData)
## Read subjects and combine
testSub <- read.table("test/subject_test.txt")
trainSub <- read.table("train/subject_train.txt")
S <- rbind(testSub, trainSub)
## Garbage collection
rm(testSub)
rm(trainSub)
## Read in data labels and combine
testLabel <- read.table("test/y_test.txt")
trainLabel <- read.table("train/y_train.txt")
Y <- rbind(testLabel, trainLabel)
## Garbage collection
rm(testLabel)
rm(trainLabel)
## Read Features List (to be used as column names for data)
featuresList <- read.table("features.txt", stringsAsFactors=FALSE)
## Use only names from features list
features <- featuresList$V2
## Logical Vector to keep only std and mean columns
keepColumns <- grepl("(std|mean[^F])", features, perl=TRUE)
## Keep only data we want, and name it human readable
X <- X[, keepColumns]
names(X) <- features[keepColumns]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Read ActivityList (to add descriptive names to data set)
activities <- read.table("activity_labels.txt")
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity" ## Add activity label
## Add human readable labels to activity names
names(S) <- "subject"
tidyData <- cbind(S, Y, X)
write.table(tidyData, "tidyData.txt")
## Create second tiny data set with avg of each var for each act and each sub
uS = unique(S)[,1]
nS = length(uS)
nA = length(activities[,1])
nC = length(names(tidyData))
td = tidyData[ 1:(nS*nA), ]
row = 1
for (s in 1:nS) {
for (a in 1:nA) {
td[row,1] = uS[s]
td[row,2] = activities[a, 2]
tmp <- tidyData[tidyData$subject==s & tidyData$activity==activities[a,2],]
td[row, 3:nC] <- colMeans(tmp[, 3:nC])
row = row + 1
}
}
write.table(td, "tidyData2.txt")
library(reshape2)
## Read data sets and combine
testData <- read.table("UCI HAR Dataset/test/X_test.txt")
trainData <- read.table("UCI HAR Dataset/train/X_train.txt")
X <- rbind(testData, trainData)
## Garbage collection
rm(testData)
rm(trainData)
## Read subjects and combine
testSub <- read.table("UCI HAR Dataset/test/subject_test.txt")
trainSub <- read.table("UCI HAR Dataset/train/subject_train.txt")
S <- rbind(testSub, trainSub)
## Garbage collection
rm(testSub)
rm(trainSub)
## Read in data labels and combine
testLabel <- read.table("UCI HAR Dataset/test/y_test.txt")
trainLabel <- read.table("UCI HAR Dataset/y_train.txt")
Y <- rbind(testLabel, trainLabel)
## Garbage collection
rm(testLabel)
rm(trainLabel)
## Read Features List (to be used as column names for data)
featuresList <- read.table("features.txt", stringsAsFactors=FALSE)
## Use only names from features list
features <- featuresList$V2
## Logical Vector to keep only std and mean columns
keepColumns <- grepl("(std|mean[^F])", features, perl=TRUE)
## Keep only data we want, and name it human readable
X <- X[, keepColumns]
names(X) <- features[keepColumns]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Read ActivityList (to add descriptive names to data set)
activities <- read.table("activity_labels.txt")
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity" ## Add activity label
## Add human readable labels to activity names
names(S) <- "subject"
tidyData <- cbind(S, Y, X)
write.table(tidyData, "tidyData.txt")
## Create second tiny data set with avg of each var for each act and each sub
uS = unique(S)[,1]
nS = length(uS)
nA = length(activities[,1])
nC = length(names(tidyData))
td = tidyData[ 1:(nS*nA), ]
row = 1
for (s in 1:nS) {
for (a in 1:nA) {
td[row,1] = uS[s]
td[row,2] = activities[a, 2]
tmp <- tidyData[tidyData$subject==s & tidyData$activity==activities[a,2],]
td[row, 3:nC] <- colMeans(tmp[, 3:nC])
row = row + 1
}
}
write.table(td, "tidyData2.txt")
library(reshape2)
## Read data sets and combine
testData <- read.table("UCI HAR Dataset/test/X_test.txt")
trainData <- read.table("UCI HAR Dataset/train/X_train.txt")
X <- rbind(testData, trainData)
## Garbage collection
rm(testData)
rm(trainData)
## Read subjects and combine
testSub <- read.table("UCI HAR Dataset/test/subject_test.txt")
trainSub <- read.table("UCI HAR Dataset/train/subject_train.txt")
S <- rbind(testSub, trainSub)
## Garbage collection
rm(testSub)
rm(trainSub)
## Read in data labels and combine
testLabel <- read.table("UCI HAR Dataset/test/y_test.txt")
trainLabel <- read.table("UCI HAR Dataset/y_train.txt")
Y <- rbind(testLabel, trainLabel)
## Garbage collection
rm(testLabel)
rm(trainLabel)
## Read Features List (to be used as column names for data)
featuresList <- read.table("UCI HAR Dataset/features.txt", stringsAsFactors=FALSE)
## Use only names from features list
features <- featuresList$V2
## Logical Vector to keep only std and mean columns
keepColumns <- grepl("(std|mean[^F])", features, perl=TRUE)
## Keep only data we want, and name it human readable
X <- X[, keepColumns]
names(X) <- features[keepColumns]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Read ActivityList (to add descriptive names to data set)
activities <- read.table("UCI HAR Dataset/activity_labels.txt")
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity" ## Add activity label
## Add human readable labels to activity names
names(S) <- "subject"
tidyData <- cbind(S, Y, X)
write.table(tidyData, "tidyData.txt")
## Create second tiny data set with avg of each var for each act and each sub
uS = unique(S)[,1]
nS = length(uS)
nA = length(activities[,1])
nC = length(names(tidyData))
td = tidyData[ 1:(nS*nA), ]
row = 1
for (s in 1:nS) {
for (a in 1:nA) {
td[row,1] = uS[s]
td[row,2] = activities[a, 2]
tmp <- tidyData[tidyData$subject==s & tidyData$activity==activities[a,2],]
td[row, 3:nC] <- colMeans(tmp[, 3:nC])
row = row + 1
}
}
write.table(td, "tidyData2.txt")
library(reshape2)
## Read data sets and combine
testData <- read.table("UCI HAR Dataset/test/X_test.txt")
trainData <- read.table("UCI HAR Dataset/train/X_train.txt")
X <- rbind(testData, trainData)
## Garbage collection
rm(testData)
rm(trainData)
## Read subjects and combine
testSub <- read.table("UCI HAR Dataset/test/subject_test.txt")
trainSub <- read.table("UCI HAR Dataset/train/subject_train.txt")
S <- rbind(testSub, trainSub)
## Garbage collection
rm(testSub)
rm(trainSub)
## Read in data labels and combine
testLabel <- read.table("UCI HAR Dataset/test/y_test.txt")
trainLabel <- read.table("UCI HAR Dataset/y_train.txt")
Y <- rbind(testLabel, trainLabel)
## Garbage collection
rm(testLabel)
rm(trainLabel)
## Read Features List (to be used as column names for data)
featuresList <- read.table("UCI HAR Dataset/features.txt", stringsAsFactors=FALSE)
## Use only names from features list
features <- featuresList$V2
## Logical Vector to keep only std and mean columns
keepColumns <- grepl("(std|mean[^F])", features, perl=TRUE)
## Keep only data we want, and name it human readable
X <- X[, keepColumns]
names(X) <- features[keepColumns]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Read ActivityList (to add descriptive names to data set)
activities <- read.table("UCI HAR Dataset/activity_labels.txt")
activities[,2] = gsub("_", "", tolower(as.character(activities[,2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity" ## Add activity label
## Add human readable labels to activity names
names(S) <- "subject"
tidyData <- cbind(S, Y, X)
write.table(tidyData, "tidyData.txt")
## Create second tiny data set with avg of each var for each act and each sub
uS = unique(S)[,1]
nS = length(uS)
nA = length(activities[,1])
nC = length(names(tidyData))
td = tidyData[ 1:(nS*nA), ]
row = 1
for (s in 1:nS) {
for (a in 1:nA) {
td[row,1] = uS[s]
td[row,2] = activities[a, 2]
tmp <- tidyData[tidyData$subject==s & tidyData$activity==activities[a,2],]
td[row, 3:nC] <- colMeans(tmp[, 3:nC])
row = row + 1
}
}
write.table(td, "tidyData2.txt")
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
library(curl)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
library(curl)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
unzip(zipfile="./data/Dataset.zip",exdir="./data")
## make sure the library "reshape2" is loaded
library(reshape2)
## set the download, URL, and unzip file name
downloadFile <- "data/getdata_dataset.zip"
## download and unzip the filename
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
## set variables for URL, file and download locations
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
## test for data foloder and zip file, if NOT found create
if(!file.exists("./data")) { dir.create("./data")}
if (!file.exists(downloadFile)) {
download.file(downloadURL, downloadFile, method = "curl");
unzip(downloadFile, overwrite = T, exdir = ".")
}
## Load activity labels - Uses descriptive activity names to name the activities in the data set
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("./data/UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
## Extract only the data on mean and standard deviation
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
## Load the data sets
train <- read.table("./data/UCI HAR Dataset/train/X_train.txt")[featuresWanted]
trainActivities <- read.table("./data/UCI HAR Dataset/train/Y_train.txt")
trainSubjects <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
test <- read.table("./data/UCI HAR Dataset/test/X_test.txt")[featuresWanted]
testActivities <- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
testSubjects <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
test <- cbind(testSubjects, testActivities, test)
## merge train and test data sets and add thier labels
combinedData <- rbind(train, test)
colnames(combinedData) <- c("subject", "activity", featuresWanted.names)
## turn activities & subjects into factors
combinedData$activity <- factor(combinedData$activity, levels = activityLabels[,1], labels = activityLabels[,2])
combinedData$subject <- as.factor(combinedData$subject)
combinedData.melted <- melt(combinedData, id = c("subject", "activity"))
combinedData.mean <- dcast(combinedData.melted, subject + activity ~ variable, mean)
## Write out the tidy data set
write.table(combinedData.mean, "tidy.txt", row.names=FALSE, quote=FALSE)
## make sure the library "reshape2" is loaded
library(reshape2)
## set the download, URL, and unzip file name
downloadFile <- "data/getdata_dataset.zip"
## download and unzip the filename
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
## set variables for URL, file and download locations
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
## test for data foloder and zip file, if NOT found create
if(!file.exists("./data")) { dir.create("./data")}
if (!file.exists(downloadFile)) {
download.file(downloadURL, downloadFile, method = "curl");
unzip(downloadFile, overwrite = T, exdir = ".")
}
## Load activity labels - Uses descriptive activity names to name the activities in the data set
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("./data/UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
## Extract only the data on mean and standard deviation
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
## Load the data sets
train <- read.table("./data/UCI HAR Dataset/train/X_train.txt")[featuresWanted]
trainActivities <- read.table("./data/UCI HAR Dataset/train/Y_train.txt")
trainSubjects <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
test <- read.table("./data/UCI HAR Dataset/test/X_test.txt")[featuresWanted]
testActivities <- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
testSubjects <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
test <- cbind(testSubjects, testActivities, test)
## merge train and test data sets and add thier labels
combinedData <- rbind(train, test)
colnames(combinedData) <- c("subject", "activity", featuresWanted.names)
## turn activities & subjects into factors
combinedData$activity <- factor(combinedData$activity, levels = activityLabels[,1], labels = activityLabels[,2])
combinedData$subject <- as.factor(combinedData$subject)
combinedData.melted <- melt(combinedData, id = c("subject", "activity"))
combinedData.mean <- dcast(combinedData.melted, subject + activity ~ variable, mean)
## Write out the tidy data set
write.table(combinedData.mean, "tidy.txt", row.names=FALSE, quote=FALSE)
## make sure the library "reshape2" is loaded
library(reshape2)
## set the download, URL, and unzip file name
downloadFile <- "data/getdata_dataset.zip"
## download and unzip the filename
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
## set variables for URL, file and download locations
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
## test for data foloder and zip file, if NOT found create
if(!file.exists("./data")) { dir.create("./data")}
if (!file.exists(downloadFile)) {
download.file(downloadURL, downloadFile, method = "curl");
unzip(downloadFile, overwrite = T, exdir = ".")
}
## Load activity labels - Uses descriptive activity names to name the activities in the data set
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("./data/UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
## Extract only the data on mean and standard deviation
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
## Load the data sets
train <- read.table("./data/UCI HAR Dataset/train/X_train.txt")[featuresWanted]
trainActivities <- read.table("./data/UCI HAR Dataset/train/Y_train.txt")
trainSubjects <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
test <- read.table("./data/UCI HAR Dataset/test/X_test.txt")[featuresWanted]
testActivities <- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
testSubjects <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
test <- cbind(testSubjects, testActivities, test)
## merge train and test data sets and add thier labels
combinedData <- rbind(train, test)
colnames(combinedData) <- c("subject", "activity", featuresWanted.names)
## turn activities & subjects into factors
combinedData$activity <- factor(combinedData$activity, levels = activityLabels[,1], labels = activityLabels[,2])
combinedData$subject <- as.factor(combinedData$subject)
combinedData.melted <- melt(combinedData, id = c("subject", "activity"))
combinedData.mean <- dcast(combinedData.melted, subject + activity ~ variable, mean)
## Write out the tidy data set
write.table(combinedData.mean, "tidy.txt", row.names=FALSE, quote=FALSE)
getwd()
downloadFile <- "data/Dataset.zip"
library(reshape2)
## set the download, URL, and unzip file name
downloadFile <- "data/Dataset.zip"
## download and unzip the filename
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
## set variables for URL, file and download locations
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
## test for data foloder and zip file, if NOT found create
if(!file.exists("./data")) { dir.create("./data")}
if (!file.exists(downloadFile)) {
download.file(downloadURL, downloadFile, method = "curl");
unzip(downloadFile, overwrite = T, exdir = ".")
}
## Load activity labels - Uses descriptive activity names to name the activities in the data set
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("./data/UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
## Extract only the data on mean and standard deviation
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
## Load the data sets
train <- read.table("./data/UCI HAR Dataset/train/X_train.txt")[featuresWanted]
trainActivities <- read.table("./data/UCI HAR Dataset/train/Y_train.txt")
trainSubjects <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
testActivities <- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
test <- read.table("./data/UCI HAR Dataset/test/X_test.txt")[featuresWanted]
testSubjects <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
test <- cbind(testSubjects, testActivities, test)
colnames(combinedData) <- c("subject", "activity", featuresWanted.names)
## merge train and test data sets and add thier labels
combinedData <- rbind(train, test)
## turn activities & subjects into factors
combinedData$subject <- as.factor(combinedData$subject)
combinedData$activity <- factor(combinedData$activity, levels = activityLabels[,1], labels = activityLabels[,2])
combinedData.melted <- melt(combinedData, id = c("subject", "activity"))
combinedData.mean <- dcast(combinedData.melted, subject + activity ~ variable, mean)
## Write out the tidy data set
write.table(combinedData.mean, "tidy.txt", row.names=FALSE, quote=FALSE)
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
rm(temporary)
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
source('~/Getting-and-Cleaning-Data-Course-Project/run_analysis.R')
